# .golangci-strict.yml.tmpl
# Stricter configuration for golangci-lint (example for ComplianceLevel=slsa-l3)
# This configuration enables more linters and uses stricter settings.

run:
  timeout: 10m # Longer timeout for more checks
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - bin
    - vendor

linters-settings:
  govet:
    enable-all: true
    # No disables - check everything including fieldalignment and shadow
  gocyclo:
    min-complexity: 10 # Stricter complexity limit
  maligned:
    suggest-new: true
  goconst:
    min-len: 2 # Stricter minimum length
    min-occurrences: 2 # Stricter minimum occurrences
  misspell:
    locale: US
  lll:
    line-length: 120 # Standard Go line length
  unused:
    check-exported: true # Check exported symbols too
  unparam:
    check-exported: true # Check exported symbols too
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-tags: [] # Enable all tags including deprecated
  errcheck:
    check-type-assertions: true
    check-blank: true
  gosec:
    # Example: Exclude specific rules if necessary, but aim for none
    # exclude:
    #   - G104 # Errors unhandled (if handled differently)
    #   - G307 # Deferring unsafe method (*File).Close
    # Include specific rules if needed (defaults are usually good)
    # include:
    #   - G204 # Subprocess launched with variable
  nakedret:
    # Max length of functions before naked returns are disallowed
    max-func-lines: 1 # Effectively disable naked returns
  prealloc:
    # Check for slice preallocations
    simple: true
    range-loops: true
    for-loops: true

linters:
  # Disable specific potentially noisy linters if absolutely necessary
  # disable:
  #   - dupl
  # Enable a comprehensive set of linters
  enable-all: false # Start clean
  enable:
    # Core Go
    - govet
    - errcheck
    - staticcheck
    - unused
    - gosimple
    - structcheck
    - varcheck
    - ineffassign
    - typecheck
    # Style & Complexity
    - gocyclo
    - gocognit
    - goconst
    - gocritic
    - gofmt
    - goimports
    - lll
    - misspell
    - nakedret # Enforce non-naked returns
    # Performance & Best Practices
    - prealloc
    - unparam
    - bodyclose # Check for unclosed HTTP response bodies
    - durationcheck # Check for inefficient time duration comparisons
    - exportloopref # Check for pointers to loop variables captured by closures
    - makezero # Check for `make` calls with non-zero length/capacity
    - rowserrcheck # Check for errors in sql rows/statements
    - sqlclosecheck # Check for unclosed sql rows/statements
    - wastedassign # Check for wasted assignments
    - whitespace # Check for leading/trailing whitespace
    # Security
    - gosec # Enable security linter

issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  exclude-rules:
    # Exclude fewer rules for stricter checks
    - path: _test\.go
      linters:
        - gocyclo # Allow slightly higher complexity in tests
        - gosec   # Allow potentially "unsafe" operations in tests if necessary

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
